package socketTCP_uploadVsDownload;

import java.io.BufferedReader;
import java.io.DataInputStream;
import java.io.DataOutputStream;
import java.io.IOException;
import java.io.InputStreamReader;
import java.io.PrintWriter;
import java.net.Socket;
import java.util.StringTokenizer;


public class Transport extends Thread{
	private Socket socket; 
	DataInputStream dis;
	DataOutputStream dos;
	String saveServerDirDefault = "upload";
	String saveClientDirDefault = "download";
	String message = "";
	
    public Transport(Socket socket) throws IOException {
    	this.socket = socket;
    	dis = new DataInputStream(socket.getInputStream());
    	dos = new DataOutputStream(socket.getOutputStream());
	}
    
    @Override
    public void run() {
    	try {
			dos.writeUTF("Welcome: \n");
		} catch (IOException e) {
			// TODO Auto-generated catch block
			e.printStackTrace();
		}
    	while (true) {
    		String request;
			try {
				request = dis.readUTF();
				if ("QUIT".equalsIgnoreCase(request)) {
					message = "Thanks! Goodbye and see you again...";
					dos.writeUTF(request);
					dos.flush();
					break;
				}
				StringTokenizer tokenizer = new StringTokenizer(request, " ");
				String cmd = tokenizer.nextToken().toUpperCase();
				switch (cmd) {
				case "SEND": {
					String sourceFile = tokenizer.nextToken();
					String saveFileWithName = tokenizer.nextToken();
					if(st.hasMoreTokens()){
						dos.writeUTF("-11");dos.flush();break;
					}
					dos.writeUTF(saveClientDirDefault);dos.flush();
					long fileSize = dis.readLong();
					fileReceive(saveFileWithName, fileSize);
					message = "Receive success!";
					break;
				}
				default:
					throw new IllegalArgumentException("Unexpected value: " + cmd);
				}
				
			} catch (IOException e) {
				// TODO Auto-generated catch block
				e.printStackTrace();
			}
    	}
    }
}
